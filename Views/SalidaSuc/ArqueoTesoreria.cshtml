
@{
    ViewBag.Title = "arqueo recibidos";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> suc = (List<SelectListItem>)ViewBag.suc;
}

<div class="col-sm-11 mt-3 pl-5">
    <div class="card shadow-lg rounded">

            <div class="card-header bg-dark text-white row">
                <div class="col-sm-">
                    <h5>Arqueo por Sucursal</h5>
                </div>

                <div class="col-sm-3">
                    <span>Fecha</span>
                    <input type="date" id="fecha1" class="form-control form-control-sm" name="fechapost"/>
                </div>

                <div class="col-sm-3">
                    <span>Sucursales</span>
                    @Html.DropDownList("Datos", suc, "Selecciona una sucursal", new { @type = "number", @class = "form-control form-control-sm", @id = "sucursales" })
               
        
                
                </div>


            </div>
            <div class="card-body">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th scope="col">Moneda</th>
                            <th scope="col">Monto a ingresar</th>
                            <th scope="col">Validar</th>
                            <th scope="col">Monto de la sucursal</th>
                            <th scope="col">Fecha</th>
                            <th scope="col">Turno</th>

                        </tr>
                    </thead>
                    <tbody id="cuerpo">
                    </tbody>
                </table>

            </div>
            <div class="card-footer">
                    <button class="btn-success btn btn-sm" onclick="crear()" type="button">Guardar</button>

               
            </div>

          
    </div>

</div>

<script>

    let checks = [];
    let posts = [];
    let casts = [];
    let idsuc;
    let idregistro = [];
    let idmone = [];
    let amax = 0;
    let turnos = [];
    

    function getDateIfDate(d) {
        var m = d.match(/\/Date\((\d+)\)\//);
        return m ? (new Date(+m[1])).toLocaleDateString( { day: '2-digit', month: '2-digit', year: 'numeric' }) : d;
    }

    var sucselect = document.getElementById("sucursales");
    sucselect.addEventListener("change", obtarqueo);

    var andselect = document.getElementById("fecha1");
    andselect.addEventListener("change", obtarqueo);

     obtarqueo();

     function obtarqueo()
     {
         var sucid = document.getElementById("sucursales").value;
    


         let fecha = document.getElementById("fecha1").value;
         let a = 1;
         const post = {
             sucursal: sucid,
             fec: fecha
         }


         fetch("/SalidaSuc/atesoria" ,
             {

                 method: 'POST',
                 body: JSON.stringify(post),
                 headers: {
                     'Accept': "application/json",
                     "Content-Type": "application/json"
                 }
             })
             .then(function (result) {
                 if (result.ok) {
                     return result.json();
                 }
             })
             .then(function (tjson)
             {
                 if (tjson == "") {

                     Swal.fire({
                         icon: 'error',
                         title: '¡Vaya!',
                         text: 'Parece que no hay registros de esta sucursal pregunte a Sistemas para mas informacion'
                     })
                 }
               
                 var cuerpo = document.getElementById("cuerpo");
                 
                 cuerpo.innerHTML = "";

                 for (let item of tjson) {

                     if (item.idregistro != 0) {
                         cuerpo.innerHTML += `
                         <th style="display: none">
                          <input id="registro${a}" type="number" name="registro${a}" class="form-control form-control-sm" value="${item.idregistro}"/> 
                          <input class="form-control form-control-sm" value="${item.idmoneda}" id="idmoneda${a}" />
                          
                         </th>
                         <th>${item.moneda} </th>
                         <th><input id="montoposts${a}" type="number" name="post${a}" oninput="validar()" class="form-control form-control-sm" value="0"/> </th>
                         <th><input type="checkbox" class="form-check-input ml-3" id="checks${a}"  disabled> </th>
                         <th><input id="montoget${a}" type="number" name="cast${a}" class="form-control form-control-sm" readonly value="${item.monto}"/></th>
                         <th> ${ getDateIfDate(item.fecha)} </th>
                         <th><input class="form-control form-control-sm" value="${item.turno}" id="turnoid${a}" /> </th>     
                      `
                     }
                     else
                     {
                         Swal.fire({
                             position: 'center',
                             icon: 'error',
                             title: item.moneda,
                             showConfirmButton: false,
                             timer: 2500
                         })
                     }

                   
                     a = a + 1;


                 }
                 amax = a - 1; 
             })

         
    }

    function validar()
    {
        let c = 1;
        for (let a = 0; a < amax; a++) {

            var a1 = document.getElementById("montoposts" + c).value;

            var b1 = document.getElementById("montoget" + c).value;

            var k1 = document.getElementById("registro" + c).value;

            var h1 = document.getElementById("idmoneda" + c).value;

            var df1 = document.getElementById("turnoid" + c).value;

            if (a1 != b1) {
                var k = document.getElementById("montoposts" + c);
                k.style.backgroundColor = "#ffb8b0";

                $("#checks" + c).prop('checked', false);

                posts[a] = a1;
                casts[a] = b1;
                idregistro[a] = k1;
                idmone[a] = h1;
                turnos[a] = df1;


            }
            else {
                var k = document.getElementById("montoposts" + c);
                k.style.backgroundColor = "#a7ffaa";

                $("#checks" + c).prop('checked', true);

                posts[a] = a1;
                casts[a] = b1;
                idregistro[a] = k1;
                idmone[a] = h1;
                turnos[a] = df1;
            }

            c = c + 1;

        }


    }

    setInterval(function () { validadores(); }, 1000);
    function validadores()
    {
        let c = 1;
        for (let a = 0; a < amax; a++) {

            var c1 = document.getElementById("checks" + c);

            if (c1.checked == true) {


                checks[a] = 1;
            }

            else {


                checks[a] = 0;
            }

            c = c + 1;
        }

    }

    function crear()
    {
  
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Espera',
                text: "¿Quieres guardarlos los datos asi?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, Guardar como esta!',
                cancelButtonText: 'No, cancelar Proceso!',
                reverseButtons: false
            }).then((result) => {
                if (result.isConfirmed) {
                    swalWithBootstrapButtons.fire(
                        'Entendido',
                        'Proceso Guardado.',
                        'success'
                    )

                    postdust();
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'OK',
                        'Proceso Cancelado',
                        'error'
                    )
                }
            })

         
        
    }


    function postdust()
    {  
        let ids = document.getElementById("sucursales").value;
     
       
        for (let a = 0; a < amax; a++) {
          

            const sub = {
                post: posts[a],
                cast: casts[a],
                check: checks[a],
                idmon: idmone[a],
                turnos: turnos[a], 
                registro: idregistro[a],
                idsucursal: ids,
                fechapost: document.getElementById("fecha1").value

            }


            fetch("/SalidaSuc/tesoreriapost" ,
                {

                    method: 'POST',
                    body: JSON.stringify(sub),
                    headers: {
                        'Accept': "application/json",
                        "Content-Type": "application/json"
                    }
                })
                .then(function (result) {
                    if (result.ok) {
                        return result.json();
                    }
                })
                .then(function (tjson) {

                    console.log(tjson);

                    var cuerpo = document.getElementById("cuerpo");
                    let a = 1;
                    cuerpo.innerHTML = "";

                })
        }
    }

</script>