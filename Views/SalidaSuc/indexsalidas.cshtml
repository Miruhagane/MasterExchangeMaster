@model WebApplication2.Models.Tb_SalidaSuc

@{

    List<SelectListItem> items = (List<SelectListItem>)ViewBag.items;
    List<SelectListItem> suc = (List<SelectListItem>)ViewBag.suc;
    ViewBag.title = "Entrada";

}


<div class="col-sm-10 mt-3 pl-5">
    <div class="card shadow-lg rounded">
        <div class="card-header bg-dark text-white row">
            <div class="col-sm-8">
                <h5>Dotaciones de las sucursales</h5>
            </div>

            <div class="col-sm-4">
                <label>Fecha de inicio</label>
                <input type="date" id="fecha1"  value="2020-11-01" class="form-control form-control-sm" />
            </div>

          
        </div>
        <div class="card-body">
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th scope="col">Monto</th>
                        <th scope="col">Moneda</th>
                        <th scope="col">Sucursal</th>
                        <th scope="col">Usuario</th>
                        <th scope="col">Mensaje </th>
                        <th scope="col">Fecha</th>
                        <th scope="col">Estatus</th>


                    </tr>
                </thead>
                <tbody id="cuerpo">
                </tbody>
            </table>

        </div>
        <div class="card-footer">
            <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#Entrada">
                Ingresar
            </button>
        </div>
    </div>

</div>

<div class="modal fade" id="Entrada" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Ingresa Saldo De salida</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <form>
                        <div class="form-row">


                            <div class="col-sm-6 mb-2">
                                <label>Saldo salida</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Dbl_SaldoSalida, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Dbl_SaldoSalida, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-6 mb-3">
                                <label>Moneda</label>

                                @Html.DropDownList("Datos", items, "Selecciona la divisa", new { @type = "number", @class = "form-control", @id = "padre" })

                                <div class="" style="display: none">
                                    @Html.EditorFor(model => model.Int_IdMoneda, new { htmlAttributes = new { @class = "form-control", @id = "idmonedaEnt", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Int_IdMoneda, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-sm-6 mb-3">
                                <label>Sucursal</label>

                                <div class="col-md-10">
                                    @Html.DropDownList("Datos", suc, "Selecciona la Sucursal", new { @type = "number", @class = "form-control", @id = "sucursal" })

                                    <div style="display: none">
                                        <input id="IdSucursal" value="@Session["idSucursal"]" />
                                        @Html.EditorFor(model => model.int_IdSucursal, new { htmlAttributes = new { @class = "form-control", @id = "intsucursal", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.int_IdSucursal, "", new { @class = "text-danger" })
                                    </div>

                                    <div style="display: none">
                                        @Html.EditorFor(Model => Model.Bol_Activo, new { AllowHtmlAttribute = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(Model => Model.Bol_Activo, "", new { @class = "text-danger" })
                                    </div>

                                    <div style="display: none">
                                        <input id="iduser" value="@User.Identity.Name" />
                                        @Html.EditorFor(model => model.Int_Idusuario, new { htmlAttributes = new { @class = "form-control", @id = "userpost", @readonly = true } })

                                        @Html.EditorFor(Model => Model.Int_estatus, new { htmlAttributes = new { @class = "form-control", @id = "status", @readonly = true } })
                                    </div>

                                </div>
                            </div>

                            <div class="col-sm-6 mb-3">
                                <label>Turno de apliacion</label>
                                <select class="form-control btn-light" id="turnos">
                                    <option value="0"> Seleciona un Turno de Aplicacion </option>
                                    <option value="1">Turno 1</option>
                                    <option value="2">Turno 2</option>
                                    <option value="3">Turno 3</option>
                                </select>

                                <div style="display: none">
                                    @Html.EditorFor(model => model.Int_IdTurno, new { htmlAttributes = new { @class = "form-control", @id = "turnopost", @readonly = true } })
                                    @Html.ValidationMessageFor(model => model.Int_IdTurno, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-6 mb-3" style="display:none">
                                <label>Fecha Entrada</label>
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Fec_Fin, new { @Value = @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
                                    @Html.ValidationMessageFor(model => model.Fec_Fin, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="col-sm-12 mt-4">
                                <button  type="submit" class="btn btn-success">Guardar </button>

                                <div style="display: none"> 
                                    <button  type="button" id="closemodal" data-dismiss="modal"></button>
                                </div>

                            </div>

                        </div>

                    </form>

                    <script>
                        function completado() {

                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: 'Actulizado',
                                showConfirmButton: false,
                                timer: 3000
                            })
                            document.getElementById("closemodal").click();
                            estados();
                        }
                    </script>

                }
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="actualizarstatus" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Cambio de Estatus</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm("status", new AjaxOptions
            {
                HttpMethod = "POST",
                OnComplete = "Complet()"

            }))
            {
                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="col-sm-12">
                        <label>Actualizar estados</label>
                        <div>
                            <select class="custom-select my-1 mr-sm-2" id="estatusselect">
                                <option selected>selecciona un estatus</option>
                                <option value="3">En proceso</option>
                                <option value="4">Entregado</option>
                                <option value="5">Cancelado</option>

                            </select>
                            <img src="" />
                        </div>

                        <div style="display: none">
                            <input type="text" id="idregistro" class="form-control form-control-sm" name="idregistro" />
                            <input type="text" id="estatus" name="estatus" class="form-control form-control-sm" />
                        </div>

                        <div id="motivo" class="col-sm-12" style="display: none">
                            <label>motivo de Cancelacion</label>
                            <input type="text" id="mtc" class="form-control form-control-sm" name="mtc" />
                        </div>

                    </div>



                </div>
                <div class="modal-footer">

                    <button  type="submit" class="btn btn-primary">Guardar cambios</button>
                    <div style="display: none">
                       <button id="closeinput"  type="button" data-dismiss="modal"></button>
                    </div>
                </div>

                <script>
                    function Complet() {

                        Swal.fire({
                            icon: 'success',
                            title: 'Datos Actualizados',
                        })

                     

                        estados();
                        document.getElementById("closeinput").click();
                    }

                </script>
            }
        </div>
    </div>
</div>


<script>

    var monedaEntrada = document.getElementById("padre");
    monedaEntrada.addEventListener("change", refresh);

    refresh();

    function refresh() {

        var mon = document.getElementById("padre").value;
        document.getElementById("idmonedaEnt").value = mon;


        var idu = document.getElementById("iduser").value;
        document.getElementById("userpost").value = idu;

        var a = 2;
        document.getElementById("status").value = a;

        document.getElementById("Bol_Activo").value = "true";

    }

    var sucid = document.getElementById("sucursal");
    sucid.addEventListener("change", cambio);

    cambio();

    function cambio() {
        var idsucursal = document.getElementById("sucursal").value;
        document.getElementById("intsucursal").value = idsucursal;
    }

    var t1 = document.getElementById("turnos");
    t1.addEventListener("change", turno)

    function turno() {
        var turno = document.getElementById("turnos").value;
        document.getElementById("turnopost").value = turno;
    }
</script>

<script>

    var funselect = document.getElementById("fecha1");


    funselect.addEventListener("change", estados);

    estados();

    function getDateIfDate(d) {
        var m = d.match(/\/Date\((\d+)\)\//);
        return m ? (new Date(+m[1])).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' }) : d;
    }


    function estados()
    {
        let date = document.getElementById("fecha1").value;

        console.log(date);

        const query = {
            fecha1: date
   
        }

        console.log(query);
         
        fetch("/SalidaSuc/obthistorial",
            {
                method: 'POST',
                body: JSON.stringify(query),
                headers: {
                    'Accept': "application/json",
                    "Content-Type": "application/json"
                         }
            })

            .then(function (result) {
                if (result.ok) {
                    console.log(result);
                    return result.json();

                }
            })
           
            .then(function (tjson)
            {
                console.log(tjson);
                var cuerpo = document.getElementById("cuerpo");

                cuerpo.innerHTML = "";
                let valor = 0;

                let estatus = "";

                let cambio = "";
         

                for (let item of tjson)
                {
                    estatus += item.Int_estatus
                    //Estatus de entradas creadas
                    if (estatus == "1") {
                        cambio += item.Dbl_SaldoSalida
                        var a = new Intl.NumberFormat().format(cambio);


                        cuerpo.innerHTML += `
                        <tr>
                            <td style="display: none"><input type="text" id="idestatus${valor}" readonly class="form-control form-control-sm"  value="${item.Lng_IdSalida}" /></td>
                            <td>$ ${a}</td>
                            <td>${item.Txt_Moneda} </td>
                            <td>${item.Txt_sucursal}</td>
                            <td>${item.username} </td>
                            <td>${item.Txt_Motivo}</td>
                            <td>${getDateIfDate(item.fecha)} </td>
                              <td> <button onclick="obtid(${valor})" type="button" data-toggle="modal" data-target="#actualizarstatus" class="btn btn-sm btn-secondary">Dotacion Inicial</button> </td>
                        </tr>
                       `
                        estatus = "";
                        cambio = "";

                    }
                    //estatus de dotaciones solicitados
                    else if (estatus == "2") {
                        cambio += item.Dbl_SaldoSalida
                        var b = new Intl.NumberFormat().format(cambio);

                        var f1 = new Date(item.fecha);
                        var fec = f1.toLocaleDateString();

                        cuerpo.innerHTML += `
                        <tr>
                            <td style="display: none" ><input type="text" id="idestatus${valor}" readonly class="form-control form-control-sm"  value="${item.Lng_IdSalida}" /></td>
                            <td>$ ${b}</td>
                              <td>${item.Txt_Moneda} </td>
                            <td>${item.Txt_sucursal}</td>
                            <td>${item.username} </td>
                            <td>${item.Txt_Motivo}</td>
                            <td>${getDateIfDate(item.fecha)} </td>

                            <td> <button onclick="obtid(${valor})" type="button" data-toggle="modal" data-target="#actualizarstatus" class="btn btn-sm btn-info">Solicitado</button> </td>
                        </tr>
                       `
                        estatus = "";
                        cambio = "";
                    }

                    //estatus de solicitudes validadas por admin

                    else if (estatus == "3") {
                        cambio += item.Dbl_SaldoSalida
                        var c = new Intl.NumberFormat().format(cambio);

                        var f1 = new Date(item.fecha);
                        var fec = f1.toLocaleDateString();

                        cuerpo.innerHTML += `
                        <tr>
                            <td style="display: none" ><input type="text" id="idestatus${valor}" readonly class="form-control form-control-sm"  value="${item.Lng_IdSalida}" /></td>
                            <td>$ ${c}</td>
                               <td>${item.Txt_Moneda} </td>
                            <td>${item.Txt_sucursal}</td>
                            <td>${item.username} </td>
                            <td>${item.Txt_Motivo}</td>
                            <td>${getDateIfDate(item.fecha)} </td>
                           <td> <button onclick="obtid(${valor})" type="button" data-toggle="modal" data-target="#actualizarstatus" class="btn btn-sm btn-primary">En Proceso</button> </td>
                        </tr>
                       `
                        estatus = "";
                        cambio = "";
                    }

                    //estatus de solicitudes ya recibidos por cajero
                    else if (estatus == "4") {
                        cambio += item.Dbl_SaldoSalida
                        var d = new Intl.NumberFormat().format(cambio);

                        var f1 = new Date(item.fecha);
                        var fec = f1.toLocaleDateString();

                        cuerpo.innerHTML += `
                        <tr>
                            <td style="display: none"><input type="text" id="idestatus${valor}" readonly class="form-control form-control-sm"  value="${item.Lng_IdSalida}" /></td>
                            <td>$ ${d}</td>
                              <td>${item.Txt_Moneda} </td>
                            <td>${item.Txt_sucursal}</td>
                            <td>${item.username} </td>
                            <td>${item.Txt_Motivo}</td>
                            <td>${getDateIfDate(item.fecha)} </td>
                            <td> <button  type="button" class="btn btn-sm btn-success">Recibido</button> </td>
                        </tr>
                       `
                        estatus = "";
                        cambio = "";
                    }
                    //estatus de solicitudes caneladas por cajero

                    else if (estatus == "5") {
                        cambio += item.Dbl_SaldoSalida
                        var e = new Intl.NumberFormat().format(cambio);

                        var f1 = new Date(item.fecha);
                        var fec = f1.toLocaleDateString();


                        cuerpo.innerHTML += `
                        <tr>
                            <td style="display: none"><input type="text" id="idestatus${valor}" readonly class="form-control form-control-sm"  value="${item.Lng_IdSalida}" /></td>
                            <td>$ ${e}</td>
                              <td>${item.Txt_Moneda} </td>
                            <td>${item.Txt_sucursal}</td>
                            <td>${item.username} </td>
                            <td>${item.Txt_Motivo}</td>
                            <td>${getDateIfDate(item.fecha)} </td>
                             <td> <button class="btn btn-sm btn-danger">Cancelado</button> </td>
                        </tr>
                       `
                        estatus = "";
                        cambio = "";
                    }


                    valor = valor + 1;
                    estatus = "";
                    cambio = "";
                }

            })


    }




    //obtener id para el cambio de estatus
    function obtid(idregistro) {
        var id = document.getElementById("idestatus" + idregistro).value;

        document.getElementById("idregistro").value = id;
    }

    //Mostrar mensaje en caso de camcelacion
    var selectd = document.getElementById("estatusselect");
    selectd.addEventListener("change", vstatus);

    function vstatus() {
        var r = document.getElementById("estatusselect").value;
        document.getElementById("estatus").value = r;

        if (r >= "1") {
            document.getElementById("motivo").style.display = "";
        }
        else {
            document.getElementById("motivo").style.display = "none";
        }

    }

</script>
