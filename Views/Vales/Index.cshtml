@model WebApplication2.Models.Tb_Vales

@{
    ViewBag.Title = "Vales";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="card text-center" style="width: 18rem;">
    <div class="card-body">
        @Html.Action("vales")
    </div>
    <div class="card-footer">
        <button type="button" class="btn btn-success" onclick="msn()" data-toggle="modal" data-target="#vale"> Nuevo vale</button>
    </div>
</div>



@*modulo agrega vale*@
<div class="modal fade" id="vale" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
      

        <div class="modal-content">
            @using (Html.BeginForm())
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Agregar Vale</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="col-sm-6">
                        <label>Conceptop</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Txt_Concepto, new { htmlAttributes = new { @class = "form-control Form-control-sm" } })
                            @Html.ValidationMessageFor(model => model.Txt_Concepto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <label>Valor</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control Form-control-sm", @oninput = "valores()" } })
                            @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6" style="display: none">
                        <label> Fecha de cierre</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Fec_Cierre, new { @Value = @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
                            @Html.ValidationMessageFor(model => model.Fec_Cierre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6" >
                       <label> Turno</label>
                        <input class="form-control form-control-sm" disabled id="idturno" value="@Session["turno"]"/>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Int_IdTurno, new { htmlAttributes = new { @class = "form-control Form-control-sm", @id="turnopost" } })
                            @Html.ValidationMessageFor(model => model.Int_IdTurno, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <label>Sucursal</label>
                        <div class="col-md-10">
                            <input class="form-control" disabled id="NomSucursal" value=@Session["sucursaledelusuario"] />

                            <div style="display: none">
                                <input id="IdSucursal" value="@Session["idSucursal"]" />
                                @Html.EditorFor(model => model.Int_IdSucursal, new { htmlAttributes = new { @class = "form-control", @id = "intsucursal", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.Int_IdSucursal, "", new { @class = "text-danger" })
                            </div>

                            <div style="display: none">
                                @Html.EditorFor(Model => Model.Bol_Status, new { AllowHtmlAttribute = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(Model => Model.Bol_Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <label> Usuario</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Int_IdUsuario, new { htmlAttributes = new { @class = "form-control Form-control-sm" } })
                            @Html.ValidationMessageFor(model => model.Int_IdUsuario, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success">Agregar</button>
                </div>
            }
        </div>
       
        </div>
</div>
<script>

    function msn()
    {
        Swal.fire({
            position: 'top-end',
            icon: 'warning',
            title: 'Espera',
            text: 'Los Vales solo puede pueden ser aprobados por administrados',
            showConfirmButton: false,
            timer: 3000
        })

          
    }

    function valores() {


        var idsucursal = document.getElementById("IdSucursal").value;
        var turno = document.getElementById("idturno").value;

        document.getElementById("intsucursal").value = idsucursal;
        document.getElementById("turnopost").value = turno;

        document.getElementById("Bol_Activo").value = "true";

    }

</script>


