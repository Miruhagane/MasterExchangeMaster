@model WebApplication2.Models.Tb_Registros


@{

    ViewBag.Title = "Comprar";
    List<SelectListItem> items = (List<SelectListItem>)ViewBag.items;


}



@*Formulario Compras*@


<div class="col-xl-5 pt-5">
    <div class="card shadow-lg bg-white rounded">
        <div class="card-header bg-dark text-white">
            Comprar en: @Session["sucursaledelusuario"]
        </div>
        <div class="card-body">


            @using (Html.BeginForm())

            {


                @Html.AntiForgeryToken()


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div style="display: none">
                    <div>
                        <input id="cliente" name="idcliente" class="form-control" value="0" />
                        <input id="idregistroticket" value="@ViewBag.id" />
                        <input id="idtipodeusuario" value="@Session["intareadeusurio"]" />
                        <input id="sucursal" value="@Session["idSucursal"]" />

                    </div>

                    <div class="form-group col-sm-8">


                        @Html.EditorFor(model => model.Int_IdTipoTran, new { htmlAttributes = new { @class = "form-control", @id = "tipodetrans", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Int_IdTipoTran, "", new { @class = "text-danger" })

                        @Html.EditorFor(Model => Model.Bol_Cancelar, new { AllowHtmlAttribute = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(Model => Model.Bol_Cancelar, "", new { @class = "text-danger" })


                    </div>

                </div>


                <div class="form-group col-sm-8">


                    <label for="inputState">Divisa</label>
                    @Html.DropDownList("Datos", items, "selecciona la divisa", new { @type = "number", @class = "form-control", id = "padre" })

                    <div style="display: none;">
                        @Html.EditorFor(model => model.Int_IdMoneda, new { htmlAttributes = new { @class = "form-control", @id = "monedaid", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Int_IdMoneda, "", new { @class = "text-danger" })
                    </div>

                    <select id="hijo" name="hijo" style=" display : none;">
                    </select>
                </div>


              
                <div class="form-group col-sm-8">
                    <label>Tipo de Cambio</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">$</div>
                        </div>
                        @Html.EditorFor(model => model.Dbl_TipoCambio, new { htmlAttributes = new { @type = "number", @class = "form-control ", @readonly = true, @id = "valor", @name = "valor" } })
                        @Html.ValidationMessageFor(model => model.Dbl_TipoCambio, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group col-sm-8">
                    <label for="inputAddress2">Cantidad</label>

                    @Html.EditorFor(model => model.Dbl_MontoRecibir, new { htmlAttributes = new { @type = "number", @class = "form-control ", @id = "cantidad", @oninput = "compras_cantidad()" } })
                    @Html.ValidationMessageFor(model => model.Dbl_MontoRecibir, "", new { @class = "text-danger" })
                </div>


                <div style="display: none">
                    <select id="usd1" name="usd1">
                    </select>

                    <input type="text" id="usd" />

                </div>



                <div class="form-group col-sm-8 ">
                    <label> Total a pagar </label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">$</div>
                        </div>

                        <input id="mtotal" class="form-control" disabled />

                    </div>

                    <div style="display: none">
                        @Html.EditorFor(model => model.Dbl_MontoPagar, new { htmlAttributes = new { @type = "number", @step = "0.01", @class = "form-control disabled", @readonly = true, @placeholder = "Total a Pagar", @id = "total_pago" } })

                        @Html.ValidationMessageFor(model => model.Dbl_MontoPagar, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*no visibles*@



                <div class="form-group col-sm-8" style="display:none">
                    <label for="inputAddress2">Entregado</label>
                    <div>
                        @Html.EditorFor(model => model.Dbl_Entregar, new { htmlAttributes = new { @type = "Text", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Dbl_Entregar, "", new { @class = "text-danger" })
                    </div>

                    <div>
                        @Html.EditorFor(Model => Model.Lng_IdSucursal, new { htmlAttributes = new { @type = "Text", @class = "form-control", @id="sucursalid"} })
                        @Html.ValidationMessageFor(model => model.Lng_IdSucursal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div id="idclientenombre" style="display: none" class="form-group col-sm-8">
                    <label for="inputAddress2">Nombre De Cliente</label>
                    <div>
                        <input type="text" id="nombredecliente" readonly class="form-control form-control-sm" value="" />
                    </div>
                </div>

                <div class="form-group col-sm-8" style="display : none;">
                    <label> Tipo de Cobro</label>

                    <div>

                        <div>
                            @Html.EditorFor(model => model.Int_IdTpv, new { htmlAttributes = new { @class = "form-control", @id = "obj" } })
                            @Html.ValidationMessageFor(model => model.Int_IdTpv, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>

                <div class="form-group col-sm-8" style="display:none">
                    <label for="inputAddress2">Fecha de Registro</label>

                    @Html.TextBoxFor(model => model.Fec_Fecha, new { @Value = @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
                    @Html.ValidationMessageFor(model => model.Fec_Fecha, "", new { @class = "text-danger" })

                </div>


                <button type="submit" onclick="success()" id="btn1" class="btn btn-success" style="display:none"> Comprar </button>

                <button type="button" onclick="crt()" id="modal1" class="btn btn-warning"> Comprar </button>

                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#cotizacion">Cotizacion</button>
                    @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalclientes"> usuarios agregar </button>*@
                @*<button type="button" class="btn btn-primary" onclick="impresionticket()" data-target="#ticket" data-toggle="modal">verificar cliente </button>*@
             
                <script>
                    function success() {

                        Swal.fire({
                            position: 'top-end',
                            icon: 'success',
                            title: 'Compra realizada Correctamente',
                            showConfirmButton: false,
                            timer: 3000

                        })
                    }
                </script>
            }

        </div>
    </div>
</div>
<div class="col-xl-5 pt-5">
    <div class="card shadow-lg bg-white rounded">
        <div class="card-header bg-dark text-white ">
            Divisas
        </div>
        <div class="card-body">

            @Html.Action("Tcomprar")
        </div>
    </div>
</div>







@*modulo buscar cliente*@
<div class="modal fade " id="modalshow" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Buscar cliente </h5>
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
            </div>
            <div class="modal-body">
                <div>

                    <input type="text" class="form-control" id="intento" />
                    <button type="submit" onclick="buscar()" class="btn btn-info">Buscar Cliente</button>
                    <button class="btn btn-warning" onclick="buscar1()">Registrar cliente </button>

                </div>

                <div class="pt-2 pb-2">

                </div>
                <table class="table table-sm table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col"></th>
                            <th></th>
                            <th scope="col">Nombre</th>
                            <th scope="col">Correo</th>
                            <th scope="col">direccion</th>
                            <th scope="col">Identificacion</th>
                            <th scope="col">Telefono</th>

                        </tr>
                    </thead>
                    <tbody id="cuerpo">
                    </tbody>
                </table>

            </div>

            <div class="modal-footer">

                <button type="button" onclick="cancelar()" class="btn btn-danger"> cancelar </button>
            </div>

        </div>
    </div>
</div>

@*modulo agregar cliente*@
<div class="modal fade " id="modalclientes" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Cliente</h5>
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>*@
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("Clientes", null, new AjaxOptions
                {
                    HttpMethod = "POST",
                    OnComplete = "buscar()"



                }, new { enctype = "multipart/form-data" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class=" pt-1">

                        <div class="card shadow-lg bg-white rounded">
                            <div class="card-header bg-dark text-white ">
                                Datos de Usuario
                            </div>
                            <div class="card-body">

                                <div class="form-group" style="display: none">
                                    <label>Codigo cliente</label>
                                    <div class="col-md-10">

                                        <input type="text" class="form-control form-control-sm" name="numcliente" />

                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Nombre de Cliente</label>
                                    <div class="col-md-10">
                                        <input id="nombreform" type="text" class="form-control form-control-sm is-invalid" name="nombre" required />
                                        <div class="invalid-feedback">
                                            Por favor Escribe Su nombre Completo
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label>Nacionalidad</label>
                                    <div class="col-md-10">

                                        <input type="text" class="form-control form-control-sm" name="dirreccion" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Numero de Identificacion</label>
                                    <div class="col-md-10">
                                        <input type="text" class="form-control form-control-sm is-invalid" id="identificador" name="identificacion" required />

                                        <div class="invalid-feedback">
                                            INE, Licencia de conducir o Pasaporte
                                        </div>

                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Documento de Identifacion</label>
                                    <div class="col-sm-10">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input form-control-sm" name="archivo" id="archivo" required>
                                            <label class="custom-file-label" for="archivo">Agrega un archivo</label>
                                            <div class="invalid-feedback">Es Obligatorio Colocar un documento de identificacion</div>
                                        </div>


                                        <div>
                                            <input readonly style="display:none" type="text" class="form-control form-control-sm" id="nombrearchivo" name="nombrearchivo" value="" />
                                        </div>

                                        <script>
                                            $("input[type=file]").change(function () {
                                                var fieldVal = $(this).val();
                                                if (fieldVal != undefined || fieldVal != "") {
                                                    $(this).next(".custom-file-label").text(fieldVal);
                                                }
                                            });

                                            document.getElementById("archivo").onchange = function () {
                                                var rt = document.getElementById("archivo").files[0].name;
                                                console.log(rt);
                                                document.getElementById("nombrearchivo").value = rt;
                                            }
                                        </script>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class=" pt-1">
                        <div class="card shadow-lg bg-white rounded">
                            <div class="card-header bg-dark text-white ">
                                Datos de Contacto
                            </div>
                            <div class="card-body">
                                <div class="form-group">
                                    <label>Numero de Telefono</label>
                                    <div class="col-md-10">
                                        <input type="text" class="form-control form-control-sm" name="telefono" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Correo de Electronico</label>
                                    <div class="col-md-10">
                                        <input type="email" id="email" class="form-control form-control-sm" name="mail" />

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <button type="submit" onclick="validacionform()" class="btn btn-success">Agregar</button>
                    <button type="submit" id="agregar" style="display: none" onclick="setTimeout(agregarbuscar, 2000);" class="btn btn-success"></button>
                    <button type="button" onclick="cancelar()" class="btn btn-danger"> cancelar </button>

                }
            </div>

        </div>
    </div>
</div>

@*modulo impresion de ticket*@
<div class="modal fade " id="ticket" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="exampleModalLabel"> <strong>Detalles de Compra</strong> </h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="tickete" class="modal-body text-center">

                <p class="h6 margin1"><small> Brazil Money Exchange Centro Cambiario</small></p>
                <p class="h6 margin1"><small> CENTRO CAMBIARIO SA DE CV</small></p>
                <p class="h6 margin1"><small>RFC: BME1112161K1</small></p>
                <p class="h6 margin1"><small>SUCURSAL: @Session["sucursaledelusuario"]</small></p>
                <p class="h6 margin1"><small>@Session["direccion"]</small></p>

                <p class="h6 margin1"><small>-----------------------------------------</small></p>
                <p class="h6 margin1"><small>Compra De Divisas</small></p>
                <p class="h6 margin1"><small>-----------------------------------------</small></p>
                <table class="table table-sm table-bordered margin1">
                    <thead class="table table-striped">
                    </thead>
                    <tbody>
                        <tr>
                            <th scope="row"><small>Folio</small></th>
                            <td id="Idticket"></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Cajero</small></th>
                            <td id="Nombre"><small>@Session["usuario"] @Session["apellido"]</small></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Fecha de Compra</small></th>
                            <td id="fecha"></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Moneda</small></th>
                            <td id="moneda"></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Monto</small></th>
                            <td><span>$</span><span id="monto"></span></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Tipo De Cambio</small></th>
                            <td><span>$</span><span id="cambio"></span></td>

                        </tr>

                        <tr>
                            <th scope="row"><small>Total a Pagar:</small></th>
                            <td><span>$</span><span id="pago"></span> </td>

                        </tr>

                    </tbody>
                </table>
                <p class="h6 margin1"><small>-----------------------------------------</small></p>
                <p class="h6 margin1"><small>Cliente</small></p>
                <p class="h6 margin1"><small>-----------------------------------------</small></p>
                <p class="h6 margin1">
                    <small>
                        El cliente Declara Bajo Protesta de Decir La
                        Verdad Que Esta Operacion Se Realiza Con
                        Recursos De Procedencia Y Destino Licitos
                    </small>
                </p>
                <p class="h6 margin1"><small>------------------------------------------</small></p>
                <p class="h6 margin1"><small>Un Buen Viajante No Tiene Planes(Confusio)</small></p>
                <p class="h6 margin1"><small>A Good Traveler Has No Plans(Confusio)</small></p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button onclick="printJS('tickete', 'html')" type="button" class="btn btn-primary">Imprimir</button>
            </div>

        </div>
    </div>
</div>

@*modulo cotizacion Normal*@

<div class="modal fade " id="cotizacion" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="exampleModalLabel"> <strong>Detalles de Compra</strong> </h6>
            </div>
            <div id="ticketecoti" class="modal-body text-center">
                <table class="table table-sm table-bordered margin1">
                   
                    <tbody>
                        <tr>
                            <th scope="row"><small>Fecha</small></th>
                            <td id="fechajs"></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Cajero</small></th>
                            <td>@Session["usuario"] @Session["apellido"]</td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Sucursal</small></th>
                            <td>@Session["sucursaledelusuario"]</td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Moneda</small></th>
                            <td id="monedacotizacion"></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Monto</small></th>
                            <td><span>$</span><span id="montocotizacion"></span></td>
                        </tr>

                        <tr>
                            <th scope="row"><small>Tipo De Cambio</small></th>
                            <td><span>$</span><span id="cambiocotizacion"></span></td>

                        </tr>

                        <tr>
                            <th scope="row"><small>Total a Pagar:</small></th>
                            <td><span>$</span><span id="pagocotizacion"></span> </td>

                        </tr>

                    </tbody>
                </table>

            </div>
            <div class="modal-footer">
                <button onclick="printJS('ticketecoti', 'html')" type="button" data-target="#cotizacion" class="btn btn-primary">Imprimir</button>
            </div>


        </div>
    </div>
</div>


@*obtener divisa usd*@

<script>
    (function () {
        usdaler();

    })();

    function usdaler() {
        fetch("/Profile/usdcompra")
            .then(function (result) {
                if (result.ok) {
                    return result.json();
                }

            }).then(function (data) {
                data.forEach(function (Elementos) {
                    let usd = document.getElementById("usd1");
                    let otp = document.createElement("option");;
                    otp.appendChild(document.createTextNode(Elementos.Text));
                    otp.value = Elementos.value;
                    usd.appendChild(otp);

                    var usd1 = document.getElementById("usd1").textContent;


                    var usd3 = parseFloat(usd1);

                    document.getElementById("usd").value = usd3;

                })
            })
    }
</script>

@*Obtener Divisa Compra*@
<script>
    var cbo = document.getElementById("padre");


    cbo.addEventListener("change", refresh);


    refresh();

    function refresh() {

        fetch("/Profile/valores" + "?idmoneda=" + cbo.value)
            .then(function (result) {
                if (result.ok) {
                    return result.json();

                }
            })
            .then(function (data) {
                data.forEach(function (Elementos) {

                    let cbopadre = document.getElementById("hijo");
                    let opt = document.createElement("option");

                    opt.appendChild(document.createTextNode(Elementos.Text));

                    opt.value = Elementos.value;

                    cbopadre.appendChild(opt);

                    var a = document.getElementById("hijo").textContent;
                    var b = document.getElementById("hijo").value;

                    var c = parseFloat(a);


                    document.getElementById("monedaid").value = b;

                    document.getElementById("valor").value = c;

                    document.getElementById("hijo").textContent = "";

                    var tipo = 1;

                    document.getElementById("tipodetrans").value = tipo;

                    document.getElementById("obj").value = tipo;

                    var valoress = document.getElementById("valor").value;
                    var cantidades = document.getElementById("cantidad").value;


                    let t_pagar = cantidades / valoress;
                    document.getElementById("total_pago").value = t_pagar;
                    document.getElementById("mtotal").value = t_pagar.toFixed(2);

                    document.getElementById("Bol_Cancelar").value = "true";

                    var idsucursal = document.getElementById("sucursal").value;
                    document.getElementById("sucursalid").value = idsucursal;

                })

            })



    }
</script>

@*Tipo de usuario*@
<script>

    (function () {
        obtenertipousuario();
    })();

    //validacion de usuarios
    function obtenertipousuario() {
        var tipousuario = document.getElementById("idtipodeusuario").value;

        // comprar tipo de usuario
        switch (tipousuario) {
            //administrativo
            case "1":
                console.log("administrativo");
                break;

            // cajero
            case "2":
                console.log("cajero");
                document.getElementById("especialdiv").style.display = "none";
                break;

            // tipo de usuario no detectado
            default:
                console.log("no detectado");
                break;
        }
    }

    //obtener tipo especial
    var esp = document.getElementById("Bol_Especial");

    esp.addEventListener("change", refresh);


    refresh();

    function refresh() {
        var especial = Bol_Especial.value;
        console.log(especial);
        if (especial == "false" || especial == "") {

        }
        else {
            console.log("funcion remove readonly corriendo");
            var cambiodesabilitado = document.getElementById("valor");
            cambiodesabilitado.removeAttribute("readonly");
        }
    }
</script>

@*operaciones*@

<script src="~/Scripts/secion.js"></script>

@* Script Buscar Cliente*@
<script>

    function buscar() {
        var cbo = document.getElementById("intento").value;
        fetch("/profile/buscar" + "?numero=" + cbo)
            .then(function (result) {
                if (result.ok) {
                    return result.json();

                }

            })
            .then(function (pjson) {
                if (pjson == 0) {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'error',
                        title: 'El cliente no existe, Registrelo para continuar',
                        showConfirmButton: false,
                        timer: 3000
                    })
                }

                else {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: 'Cliente Encontrado',
                        showConfirmButton: false,
                        timer: 3000
                    })
                }

                var cuerpo = document.getElementById("cuerpo");
                cuerpo.innerHTML = "";
                let valor = 0;
                for (let item of pjson) {
                    cuerpo.innerHTML += `
                    <tr>    <td>  <button type="button" data-dismiss="modal" onclick="obtid(${valor})" class="btn btn-info">seleccionar</button> </td>
                            <td> <input id="idclientes${valor}" style="display: none" type="text" class="form-control form-control-sm" name="numcliente" value="${item.Lng_IdCliente}" /> </td>

                            <td><input id="Nombre${valor}" type="text" readonly class="form-control form-control-sm"  name="numcliente" value="${item.Txt_Cliente}" /></td>

                            <td id="correo">${item.Txt_Email}</td>

                            <td id="direccion">${item.Txt_Direccion}</td>

                            <td id="identificacion">${item.Txt_Identificacion}</td>

                            <td id="telefono">${item.Txt_Telefono}</td>

                        </tr>
                    `

                    valor = valor + 1;
                }
            })

    }



    function agregarbuscar() {
        var obr = document.getElementById("identificador").value;

        $('#modalclientes').modal('hide');

        $('#modalshow').modal('show');

        fetch("/profile/buscar" + "?numero=" + obr)
            .then(function (result) {
                if (result.ok) {
                    return result.json();

                }
            })
            .then(function (pjson) {
                if (pjson == 0) {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'error',
                        title: 'El cliente no existe, Registrelo para continuar',
                        showConfirmButton: false,
                        timer: 3000
                    })
                }

                else {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: 'Cliente Encontrado',
                        showConfirmButton: false,
                        timer: 3000
                    })
                }

                var cuerpo = document.getElementById("cuerpo");
                cuerpo.innerHTML = "";
                let valor = 0;
                for (let item of pjson) {
                    cuerpo.innerHTML += `
                    <tr>    <td>  <button type="button" onclick="obtid(${valor})" class="btn btn-info">seleccionar</button> </td>
                            <td> <input id="idclientes${valor}" style="display: none" type="text" class="form-control form-control-sm" name="numcliente" value="${item.Lng_IdCliente}" /> </td>

                            <td> <input id="Nombre${valor}" type="text" readonly class="form-control form-control-sm" name="numcliente" value="${item.Txt_Cliente}" />  </td>

                            <td id="correo">${item.Txt_Email}</td>

                            <td id="direccion">${item.Txt_Direccion}</td>

                            <td id="identificacion">${item.Txt_Identificacion}</td>

                            <td id="telefono">${item.Txt_Telefono}</td>

                        </tr>            
                    `

                    valor = valor + 1;
                }
            })



    }
    function obtid(idnucli) {

      
        var id = document.getElementById("idclientes" + idnucli).value;
        var nombreuser = document.getElementById("Nombre" + idnucli).value;

        document.getElementById("cliente").value = id;
        document.getElementById("nombredecliente").value = nombreuser;

        $('#modalshow').modal('hide');
        if (cliente.value != 0) {
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Cliente asignado correctamente',
                showConfirmButton: false,
                timer: 3000
            })

        }
        else {
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: 'Huno un error al asignar al cliente',
                showConfirmButton: false,
                timer: 3000
            })

        }

        if (nombredecliente.value != "") {
            document.getElementById("idclientenombre").style.display = "";
        }


    }


    function buscar1() {
        $('#modalshow').modal('hide');

        $('#modalclientes').modal('show');

    }



</script>


@*impresion de ticket*@

<script>
    function getDateIfDate(d) {
        var m = d.match(/\/Date\((\d+)\)\//);
        return m ? (new Date(+m[1])).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' }) : d;
    }

    (function () {
        llamadarticket();
    })();

    function llamadarticket() {
        if (idregistroticket.value == "" || idregistroticket.value == "0") {
            console.log("funciona");
        }
        else {
            Swal.fire({
                title: '¿Quieres Imprimir el ticket?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'si'
            }).then((result) => {
                if (result.value) {
                    impresionticket();
                }
            })
        }
    }

    function impresionticket() {

        $('#ticket').modal('show');

      
        var dr = document.getElementById("idregistroticket").value;

        fetch("/profile/returnticket" + "?registro=" + dr)
            .then(function (result) {
                if (result.ok != null) {

                    return result.json();

                }
            }).then(function (Tjson) {

                let Idticket = "";
                let fecha = "";
                let moneda = "";
                let monto = "";
                let cambio = "";
                let importe = "";

                for (let i = 0; i < Tjson.length; i++) {
                    Idticket += Tjson[i].Lng_IdRegistro
                    fecha += Tjson[i].Fec_Fecha
                    moneda += Tjson[i].Moneda
                    monto += Tjson[i].Dbl_MontoRecibir
                    cambio += Tjson[i].Dbl_TipoCambio
                    importe += Tjson[i].Dbl_MontoPagar

                }


                var b = new Intl.NumberFormat().format(monto);
                var c = new Intl.NumberFormat().format(cambio);
                var d = new Intl.NumberFormat().format(importe);



                document.getElementById("Idticket").innerHTML = Idticket;
                document.getElementById("fecha").innerHTML = getDateIfDate(fecha);
                document.getElementById("moneda").innerHTML = moneda;
                document.getElementById("monto").innerHTML = b;
                document.getElementById("cambio").innerHTML = c;
                document.getElementById("pago").innerHTML = d;


            })





    }
</script>

@*cancelacion de procesos*@
<script>
    function cancelar() {
        Swal.fire({
            title: '¿Estas Seguro?',
            text: "El proceso se cancelara y no se guardara",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si Estoy Seguro'
        })
            .then((result) => {
                if (result.isConfirmed) {
                    Swal.fire(
                        'entendido',
                        'Proceso Cancelado',
                        'success'
                    )

                    location.reload();
                }
            })

    }

</script>

@*validacion de archivos*@
<script>
    function validacionform() {
        var a = document.getElementById("nombreform").value;
        var b = document.getElementById("identificador").value;
        var c = document.getElementById("archivo").value;

        if (a == "" && b == "" && c == "") {



        }
        else if (a != "" && b != "" && c != "") {

            document.getElementById("agregar").click();


        }

    }
</script>

@*necesario para ajaxdocumentos*@
<script>
    window.addEventListener("submit", function (e) {
        var form = e.target;
        if (form.getAttribute("enctype") === "multipart/form-data") {
            if (form.dataset.ajax) {
                e.preventDefault();
                e.stopImmediatePropagation();
                var xhr = new XMLHttpRequest();
                xhr.open(form.method, form.action);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        if (form.dataset.ajaxUpdate) {
                            var updateTarget = document.querySelector(form.dataset.ajaxUpdate);
                            if (updateTarget) {
                                updateTarget.innerHTML = xhr.responseText;
                            }
                        }
                    }
                };
                xhr.send(new FormData(form));
            }
        }
    }, true);
</script>
