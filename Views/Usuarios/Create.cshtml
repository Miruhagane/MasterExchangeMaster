@model WebApplication2.Models.Tb_Usuarios

@{
    ViewBag.Title = "Crear Nuevo Usuario";

    List<SelectListItem> areas = (List<SelectListItem>)ViewBag.areas;

    List<SelectListItem> plaza = (List<SelectListItem>)ViewBag.plaza;


}

<div class="col-sm-11 shadow-lg ml-3 mt-3">

    <div class="card mb-1 ml-2 mr-2">
        <div class="card-header bg-dark text-white">
            <h5 class="card-title">Crear Nuevo Usuario</h5>
        </div>
    </div>
    @using (Html.BeginForm("Create", "Usuarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="card-group shadow-lg">


    <div class="card  col-md-5">

        <div id="gradiente1" class="card-body">
            <div class="form-row">


                <div class="col-sm-6">
                    <label class="h6">Nombre</label>
                    @Html.EditorFor(model => model.Txt_Nombre, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Txt_Nombre, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-6">
                    <label class="h6">Apellido</label>
                    @Html.EditorFor(model => model.Txt_Apellido, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Txt_Apellido, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-6">
                    <label class="h6">Nombre Corto</label>
                    @Html.EditorFor(model => model.Txt_NomCorto, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Txt_NomCorto, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-6">
                    <label class="h6">Contraseña</label>
                    @Html.EditorFor(model => model.Txt_Password, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Txt_Password, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-12">
                    <label class="h6">Correo Electronico</label>
                    @Html.EditorFor(model => model.Txt_email, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Txt_email, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-6">
                    <label class="h6">Telefono Celular </label>
                    @Html.EditorFor(model => model.Num_Telefono_2, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Num_Telefono_2, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-6">
                    <label class="h6">Telefono de Casa</label>
                    @Html.EditorFor(model => model.Num_Telefono_1, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Num_Telefono_1, "", new { @class = "text-danger" })
                </div>

                <div class="form-group" style="display: none">
                    <label class="h6">Fecha de Baja</label>
                    @Html.EditorFor(model => model.Fec_Baja, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Fec_Baja, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-6">
                    <label class="h6"> Area</label>
                    @Html.DropDownList("Datos", areas, "Selecciona Un Area", new { @type = "number", @class = "form-control", @id = "Area" })
                    <div style="display: none">
                        @Html.EditorFor(model => model.Int_IdArea, new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "areapost", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Int_IdArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-sm-6" style="display:none">
                    <label class="h6"> Fecha de Alta</label>
                    @Html.TextBoxFor(model => model.Fec_Alta, new { @Value = @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
                    @Html.ValidationMessageFor(model => model.Fec_Alta, "", new { @class = "text-danger" })
                </div>


                <div class="col-sm-6">
                    <label class="h6">Plaza</label>
                    @Html.DropDownList("Datos", plaza, "Selecciona una Plaza", new { @type = "number", @class = "form-control", @id = "Plaza" })
                    <div style="display: none">
                        @Html.EditorFor(model => model.Int_IdPlaza, new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "plazapost", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Int_IdPlaza, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <label class="h6">Sucursal</label>
                    <select id="sucursal" class="form-control" name="sucursal">
                    </select>
                    <div style="display: none">
                        @Html.EditorFor(model => model.Lng_IdSucursal, new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "sucursalpost", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Lng_IdSucursal, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <label class="h6">Empresa Perteneciente</label>
                    @Html.EditorFor(model => model.Int_IdEmpresa, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Int_IdEmpresa, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-12">
                    <label class="h6">Departamento</label>
                    @Html.EditorFor(model => model.Int_IdDepartamentos, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Int_IdDepartamentos, "", new { @class = "text-danger" })
                </div>

                <div class="col-sm-12 mt-1 text-center">
                    <button type="submit" class="btn btn-success">Crear</button>
                </div>
            </div>
        </div>
    </div>


    <div class="col-md-3" style="height:100%">
        <div class="card shadow-lg" id="preview">
        </div>

        <div class="col-sm-12">
            <label class="h6">Foto de Usuario</label>
            <input id="file" name="file" type="file" />
        </div>
    </div>
</div>
    }
</div>


<script>


    document.getElementById("file").onchange = function (e) {
        // Creamos el objeto de la clase FileReader
        let reader = new FileReader();

        // Leemos el archivo subido y se lo pasamos a nuestro fileReader
        reader.readAsDataURL(e.target.files[0]);

        // Le decimos que cuando este listo ejecute el código interno
        reader.onload = function () {
            let preview = document.getElementById('preview'),
                image = document.createElement('img');

            image.src = reader.result;

            image.classList = "card-img";
            preview.innerHTML = "";
            preview.append(image);
        };
    }

</script>


<script>
    var area = document.getElementById("Area");
    area.addEventListener("change", refresh);

    refresh();

    function refresh() {
        var idarea = document.getElementById("Area").value;
        document.getElementById("areapost").value = idarea;

    }
</script>


<script>
    var sucursal = document.getElementById("sucursal");
    sucursal.addEventListener("change", refresh);

    refresh();

    function refresh() {
        var idsucursal = document.getElementById("sucursal").value;
        document.getElementById("sucursalpost").value = idsucursal;

    }
</script>


<script>

    var pbo = document.getElementById("Plaza");
    pbo.addEventListener("change", refresh);

    refresh();

    function refresh() {
        
        fetch("/Usuarios/sucursales" + "?int_plaza=" + pbo.value)
            .then(function (result) {
                if (result.ok) {
                    return result.json();
                }
            })
            .then(function (data) {
                var sel = document.getElementById('sucursal');
                for (i = sel.length - 1; i >= 0; i--) {
                    sel.remove(i);
                }
                data.forEach(function (Elementos) {

                    let cbopadre = document.getElementById("sucursal");
                    let opt = document.createElement("option");

                    opt.appendChild(document.createTextNode(Elementos.Text));

                    opt.value = Elementos.value;

                    cbopadre.appendChild(opt);

                })
            })

        var idPlaza = document.getElementById("Plaza").value;
        document.getElementById("plazapost").value = idPlaza;
    }

</script>




