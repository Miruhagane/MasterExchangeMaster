@model WebApplication2.Models.Tb_Usuarios

@{
    ViewBag.Title = "Actualizar Usuario";

    List<SelectListItem> areas = (List<SelectListItem>)ViewBag.areas;

    List<SelectListItem> plaza = (List<SelectListItem>)ViewBag.plaza;
}


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("Edit", "Usuarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Int_Idusuario)

    <div class="card-group pt-3 pl-5 shadow-lg">


        <div class="card  col-md-5">

            <div id="gradiente1" class="card-body">
                <div class="form-row">


                    <div class="col-sm-6">
                        <label class="h6">Nombre</label>

                        @Html.EditorFor(model => model.Txt_Nombre, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Txt_Nombre, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-6">
                        <label class="h6">Apellido</label>
                        @Html.EditorFor(model => model.Txt_Apellido, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Txt_Apellido, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-sm-6">
                        <label class="h6">Nombre Corto</label>

                        @Html.EditorFor(model => model.Txt_NomCorto, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Txt_NomCorto, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-6">
                        <label class="h6">Contraseña</label>

                        @Html.EditorFor(model => model.Txt_Password, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Txt_Password, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-12">
                        <label class="h6">Correo Electronico</label>
                        @Html.EditorFor(model => model.Txt_email, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Txt_email, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-6">
                        <label class="h6">Telefono Celular </label>

                        @Html.EditorFor(model => model.Num_Telefono_1, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Num_Telefono_1, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-sm-6">
                        <label class="h6">Telefono de Casa</label>

                        @Html.EditorFor(model => model.Num_Telefono_2, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Num_Telefono_1, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-6">
                        <label class="h6">Fecha de Alta</label>
                        @Html.EditorFor(model => model.Fec_Alta, new { htmlAttributes = new {@type="date",  @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Fec_Alta, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6">
                        <label class="h6">Fecha de baja</label>
                        @Html.EditorFor(model => model.Fec_Baja, new { htmlAttributes = new { @type = "date", @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Fec_Baja, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-sm-6">
                        <label class="h6"> Area</label>
                        @Html.DropDownList("Datos", areas, "Selecciona Un Area", new { @type = "number", @class = "form-control form-control-sm", @id = "Area" })


                    <div style="display: none">
                   

                        @Html.EditorFor(model => model.Int_IdArea, new { htmlAttributes = new { @class = "form-control", @id = "areapost", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.Int_IdArea, "", new { @class = "text-danger" })
                    </div>

                    </div>

                  
                    <div class="col-sm-6">
                        <label class="h6">Plaza</label>
                        @Html.DropDownList("Datos", plaza, "Selecciona una Plaza", new { @type = "number", @class = "form-control form-control-sm", @id = "Plaza" })

                        <div style="display: none">
                            @Html.EditorFor(model => model.Int_IdPlaza, new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "plazapost", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Int_IdPlaza, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-sm-6">
                        <label class="h6">Sucursal</label>

                        <select id="sucursal" class="form-control" name="sucursal">
                              <option value="0">Selecciona una Opcion</option>
                        </select>

                        <div style="display: none">

                            @Html.EditorFor(model => model.Lng_IdSucursal, new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "sucursalpost", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Lng_IdSucursal, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-sm-6">
                        <label class="h6">Empresa Perteneciente</label>

                        @Html.EditorFor(model => model.Int_IdEmpresa, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Int_IdEmpresa, "", new { @class = "text-danger" })

                    </div>


                    <div class="col-sm-12 mt-1 text-center">

                        <button type="submit" class="btn btn-warning">Actualizar</button>

                    </div>



                </div>
            </div>
        </div>


        <div class="col-md-3" style="height:10%">
            <img src="@Url.Action("img", "usuarios", new { id = Model.Int_Idusuario})" class="card-img" alt="..." />
            <div class="card shadow-lg" id="preview">

            </div>

            <div class="col-sm-12">
                <label class="h6">Foto de Usuario</label>

                <input id="file" name="file" type="file" />

            </div>

        </div>

    </div>


}




<script>


    document.getElementById("file").onchange = function (e) {
        // Creamos el objeto de la clase FileReader
        let reader = new FileReader();

        // Leemos el archivo subido y se lo pasamos a nuestro fileReader
        reader.readAsDataURL(e.target.files[0]);

        // Le decimos que cuando este listo ejecute el código interno
        reader.onload = function () {
            let preview = document.getElementById('preview'),
                image = document.createElement('img');

            image.src = reader.result;

            image.classList = "card-img";
            preview.innerHTML = "";
            preview.append(image);
        };
    }

</script>


  @*obtener area*@
<script>

 
        document.getElementById("Area").value = areapost.value;
    
        var area = document.getElementById("Area");
        area.addEventListener("change", refresh);

        refresh();

        function refresh() {
            var idarea = document.getElementById("Area").value;
            document.getElementById("areapost").value = idarea;
        }

</script>

  
<script>

    var guardar = document.getElementById("sucursalpost").value;
    
    var sucursal = document.getElementById("sucursal");
    sucursal.addEventListener("change", refresh);

    refresh();

    function refresh() {
        var idsucursal = document.getElementById("sucursal").value;
        document.getElementById("sucursalpost").value = idsucursal;

    }
    document.getElementById("sucursalpost").value = guardar;

</script>


<script>

    
    document.getElementById("Plaza").value = document.getElementById("plazapost").value;
    var pbo = document.getElementById("Plaza");
    pbo.addEventListener("change", refresh);

    refresh();

    function refresh() {

        fetch("/Usuarios/sucursales" + "?int_plaza=" + pbo.value)
            .then(function (result) {
                if (result.ok) {
                    return result.json();
                }
            })
            .then(function (data) {
                var sel = document.getElementById('sucursal');
                for (i = sel.length - 1; i >= 1; i--) {
                    sel.remove(i);
                }
                data.forEach(function (Elementos) {

                    let cbopadre = document.getElementById("sucursal");
                    let opt = document.createElement("option");

                    opt.appendChild(document.createTextNode(Elementos.Text));

                    opt.value = Elementos.value;

                    cbopadre.appendChild(opt);

             

                })
            })

    
    
    }

</script>





